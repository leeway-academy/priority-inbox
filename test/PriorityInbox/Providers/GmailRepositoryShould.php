<?php

namespace PriorityInbox\Providers;

use DateTimeImmutable;
use PhpMimeMailParser\Parser;
use PHPUnit\Framework\TestCase;
use PriorityInbox\Email;
use PriorityInbox\Sender;
use PriorityInbox\EmailId;
use PriorityInbox\EmailUpdate;
use PriorityInbox\Label;
use PriorityInbox\LabelFilter;
use Google\Service\Gmail\Message;

class GmailRepositoryShould extends TestCase
{
    const A_LABEL = "A label";
    const LABEL_ID = "abcd";
    const EMAIL_ID = "1";
    const SENDER_ADDRESS = "asasas";
    const LABEL_ADD_THIS = "ADD THIS";
    const LABEL_REMOVE_THIS = "REMOVE THIS";
    const DATE_FORMAT = 'd-m-Y H:i:s';
    private GmailRepository $gmailRepository;
    private GmailDAO $gmailDAO;

    /**
     * @test
     */
    public function fetch_from_gmail_using_filters(): void
    {
        $label = new Label(self::LABEL_ID, self::A_LABEL);
        $labelFilter = new LabelFilter($label);

        $this
            ->gmailDAO
            ->expects($this->once())
            ->method('getFilteredMessageList')
            ->with($this->equalTo([$labelFilter]))
            ;

        $this
            ->gmailRepository
            ->fetch([$labelFilter])
            ;
    }

    /**
     * @test
     */
    public function return_found_objects_as_emails(): void
    {
        $message = new Message();
        $message->setId("MyId");
        $message->setRaw("raw");

        $this
            ->gmailDAO
            ->method('getFilteredMessageList')
            ->willReturn([$message])
        ;

        $emails = $this
            ->gmailRepository
            ->fetch()
            ;

        foreach ($emails as $email) {
            $this->assertInstanceOf(Email::class, $email);
        }
    }

    /**
     * @test
     * @dataProvider provideEncodedMessages
     */
    public function transform_gmail_messages_into_emails(string $rawData, Sender $sender, DateTimeImmutable $sentAt): void
    {
        $message = new Message();
        $message->setId("MyId");
        $message->setRaw(
            $rawData);

        $this
            ->gmailDAO
            ->method('getFilteredMessageList')
            ->willReturn([$message])
        ;

        $email = current($this
            ->gmailRepository
            ->fetch());

        $this->assertEquals($sender, $email->sender());
        $this->assertEquals($sentAt->format(self::DATE_FORMAT), $email->sentAt()->format(self::DATE_FORMAT));
    }

    /**
     * @return void
     * @test
     */
    public function update_emails_in_gmail(): void
    {
        $emailId = new EmailId(self::EMAIL_ID);
        $sender = new Sender(self::SENDER_ADDRESS);
        $sentAt = new DateTimeImmutable();


        $labelToAdd = new Label(self::LABEL_ADD_THIS, self::LABEL_ADD_THIS);
        $labelToRemove = new Label(self::LABEL_REMOVE_THIS, self::LABEL_REMOVE_THIS);

        $email = new Email($emailId, $sender, $sentAt, [$labelToRemove]);

        $emailUpdate = new EmailUpdate();
        $emailUpdate
            ->addLabel($labelToAdd)
            ->removeLabel($labelToRemove)
            ;

        $this->gmailDAO
            ->expects($this->once())
            ->method('modifyMessage')
            ->with(
                $this->equalTo($emailId),
                $this->equalTo($emailUpdate)
            )
        ;

        $email
            ->addLabel($labelToAdd)
            ->removeLabel($labelToRemove)
            ;

        $this
            ->gmailRepository
            ->updateEmail($email);
    }

    /**
     * @return array[]
     */
    public function provideEncodedMessages(): array
    {
        return [
            [
                "",
                new Sender("Andri Chirigüita <asserpc@gmail.com>"),
                new DateTimeImmutable("2022-08-02 10:13:09"),
            ],
            [
                "",
                new Sender("Hacker Noon <stories@hackernoon.com>"),
                new DateTimeImmutable("2022-08-02 12:02:23"),
            ]
        ];
    }

    protected function setUp(): void
    {
        parent::setUp();
        $this->gmailDAO = $this->createMock(GmailDAO::class);
        $this->gmailRepository = new GmailRepository($this->gmailDAO, new Parser());
    }
}